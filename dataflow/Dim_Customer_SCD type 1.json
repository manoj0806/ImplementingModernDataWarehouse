{
	"name": "Dim_Customer_SCD type 1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Staging_Customer",
						"type": "DatasetReference"
					},
					"name": "ADLSstagingCustomer"
				},
				{
					"dataset": {
						"referenceName": "DimCustomerTable",
						"type": "DatasetReference"
					},
					"name": "DimCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimCustomerTable",
						"type": "DatasetReference"
					},
					"name": "SinkDimCustomer"
				},
				{
					"dataset": {
						"referenceName": "DimCustomerTable",
						"type": "DatasetReference"
					},
					"name": "SinkUpdateDimCustomer"
				}
			],
			"transformations": [
				{
					"name": "Exists"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Exists1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "source(output(\n\t\tcustomer_Id as string,\n\t\tDOB as string,\n\t\tGender as string,\n\t\tcity_code as string,\n\t\tCustomer_Name as string,\n\t\tCreated_Modified_Date as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ADLSstagingCustomer\nsource(output(\n\t\tcustomer_key as integer,\n\t\tcustomer_Id as integer,\n\t\tcustomer_name as string,\n\t\tDOB as string,\n\t\tcity_code as string,\n\t\tgender as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimCustomer\nADLSstagingCustomer, DimCustomer exists(toInteger(ADLSstagingCustomer@customer_Id) == DimCustomer@customer_Id,\n\tnegate:true,\n\tbroadcast: 'auto')~> Exists\nExists derive(customerId = toInteger(customer_Id)) ~> DerivedColumn1\nADLSstagingCustomer, DimCustomer exists(toInteger(ADLSstagingCustomer@customer_Id) == DimCustomer@customer_Id,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists1\nExists1 derive(CustomerId = toInteger(customer_Id)) ~> DerivedColumn2\nDerivedColumn2 alterRow(updateIf(true())) ~> AlterRow1\nDerivedColumn1 sink(input(\n\t\tcustomer_key as integer,\n\t\tcustomer_Id as integer,\n\t\tcustomer_name as string,\n\t\tDOB as string,\n\t\tcity_code as string,\n\t\tgender as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tcustomer_Id = customerId,\n\t\tcustomer_name = Customer_Name,\n\t\tDOB,\n\t\tcity_code,\n\t\tgender = Gender\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkDimCustomer\nAlterRow1 sink(input(\n\t\tcustomer_key as integer,\n\t\tcustomer_Id as integer,\n\t\tcustomer_name as string,\n\t\tDOB as string,\n\t\tcity_code as string,\n\t\tgender as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['customer_Id'],\n\tformat: 'table',\n\tmapColumn(\n\t\tcustomer_Id = CustomerId,\n\t\tcustomer_name = Customer_Name,\n\t\tDOB,\n\t\tcity_code,\n\t\tgender = Gender\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkUpdateDimCustomer"
		}
	}
}