{
	"name": "Delta_Load_Pipeline",
	"properties": {
		"activities": [
			{
				"name": "Lookup_Config",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from dbo.config where Enabled=1;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ConfigTable",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Filter_Sql_Files",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lookup_Config",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup_Config').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().Source,'SQLVM')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Filter_FlatFiles",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lookup_Config",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup_Config').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().Source,'FileSystem')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter_Sql_Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter_Sql_Files').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "If Condition Based on Type of Load",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@bool(equals(item().Load_Flag,'Incremental'))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "get max of Last MaxUpdateDate Config",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "select Watermark_Value from dbo.config where Source_Table like '@{item().Source_Table}'",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "ConfigTable",
												"type": "DatasetReference"
											},
											"firstRowOnly": true
										}
									},
									{
										"name": "Copy Delta load from Tables to ADLS",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "get max of Last MaxUpdateDate Config",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [
											{
												"name": "Source",
												"value": "dbo.@{item().Watermark_Column}"
											},
											{
												"name": "Destination",
												"value": "staging//@{item().Dest_Table}"
											}
										],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "select * from @{item().Source_Table}\nwhere \nconvert(datetime,@{item().Watermark_Column},105) >\nconvert(datetime,substring(\nreplace('@{activity('get max of Last MaxUpdateDate Config').output.firstRow.Watermark_Value}',\n'T',' '),0,20),120)",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "IncrementalSQLRetailOnprem",
												"type": "DatasetReference",
												"parameters": {
													"TableName": {
														"value": "substring('@{item().Source_Table}',4,string(length('@{item().Source_Table}')))",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "IncrementalSinkDataLake",
												"type": "DatasetReference",
												"parameters": {
													"StagingFileName": "@{item().Dest_Table}"
												}
											}
										]
									}
								]
							}
						}
					]
				}
			}
		],
		"annotations": []
	}
}